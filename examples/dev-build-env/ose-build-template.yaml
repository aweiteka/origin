---
kind: Template
apiVersion: v1
metadata:
  name: automated-build
  creationTimestamp:
  annotations:
    description: An OpenShift v3 template that sets up an automated build pipeline
      for building docker images from Dockerfile. Assumes the base FROM image has
      been created as an ImageStream.
    provider: aweiteka@redhat.com
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${BUILD_IMAGE_NAME}"
    creationTimestamp:
  spec:
    tags:
    - name: "${BUILD_IMAGE_TAG}"
      from:
        Kind: ImageStreamTag
        Name: "${BUILD_IMAGE_TAG}"
  status:
    dockerImageRepository: ''
- kind: ImageStream
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2015-08-24T14:21:58Z
    creationTimestamp: null
    name: "${BASE_DOCKER_IMAGE}"
  spec:
    dockerImageRepository: "${BASE_DOCKER_IMAGE}"
  status:
    dockerImageRepository: ""
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-build"
    creationTimestamp:
    labels:
      name: "${NAME}-build"
  spec:
    triggers:
    - type: github
      github:
        secret: "${GIT_SECRET}"
    - type: generic
      generic:
        secret: "${GENERIC_SECRET}"
    - type: imageChange
      imageChange: {}
    source:
      type: Git
      git:
        uri: "${SOURCE_URI}"
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: "${BASE_DOCKER_IMAGE}:${BASE_DOCKER_IMAGE_TAG}"
    output:
      to:
        kind: ImageStreamTag
        name: "${BUILD_IMAGE_NAME}:${BUILD_IMAGE_TAG}"
    resources: {}
  status:
    lastVersion: 0
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-scratch-deploy"
  spec:
    template:
      metadata:
        labels:
          name: "${NAME}-${BUILD_IMAGE_TAG}-deploy"
      spec:
        containers:
        - name: "${NAME}"
          image: "${BUILD_IMAGE_NAME}"
          args:
          - "${TEST_CMD}"
    replicas: 1
    selector:
      name: "${NAME}-${BUILD_IMAGE_TAG}-deploy"
    triggers:
    - type: imageChange
      imageChangeParams:
        automatic: true
        from:
          kind: ImageStreamTag
          name: "${BUILD_IMAGE_NAME}:${BUILD_IMAGE_TAG}"
    - type: generic
      generic:
        secret: "${GENERIC_SECRET}"
    strategy:
      type: Recreate
      recreateParams:
        pre:
          failurePolicy: Abort
          execNewPod:
            command:
            - "/usr/bin/curl"
            - "-X"
            - GET
            - http://jsonplaceholder.typicode.com/posts/1
            env:
            - name: FOO
              value: BAR
            containerName: "${NAME}"
- kind: "Service"
  apiVersion: "v1"
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    creationTimestamp: null
  spec:
    ports:
    - name: "web"
      protocol: "TCP"
      port: 8080
      targetPort: 8080
      nodePort: 0
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    portalIP: ""
    type: "ClusterIP"
    sessionAffinity: "None"
  status:
    loadBalancer: {}
- kind: "Route"
  apiVersion: "v1"
  metadata:
    name: "jenkins"
    creationTimestamp: null
  spec:
    to:
      kind: "Service"
      name: "${JENKINS_SERVICE_NAME}"
    tls:
      termination: "edge"
      certificate: "-----BEGIN CERTIFICATE-----\nMIIDIjCCAgqgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBoTELMAkGA1UEBhMCVVMx\nCzAJBgNVBAgMAlNDMRUwEwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0Rl\nZmF1bHQgQ29tcGFueSBMdGQxEDAOBgNVBAsMB1Rlc3QgQ0ExGjAYBgNVBAMMEXd3\ndy5leGFtcGxlY2EuY29tMSIwIAYJKoZIhvcNAQkBFhNleGFtcGxlQGV4YW1wbGUu\nY29tMB4XDTE1MDExMjE0MTk0MVoXDTE2MDExMjE0MTk0MVowfDEYMBYGA1UEAwwP\nd3d3LmV4YW1wbGUuY29tMQswCQYDVQQIDAJTQzELMAkGA1UEBhMCVVMxIjAgBgkq\nhkiG9w0BCQEWE2V4YW1wbGVAZXhhbXBsZS5jb20xEDAOBgNVBAoMB0V4YW1wbGUx\nEDAOBgNVBAsMB0V4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMrv\ngu6ZTTefNN7jjiZbS/xvQjyXjYMN7oVXv76jbX8gjMOmg9m0xoVZZFAE4XyQDuCm\n47VRx5Qrf/YLXmB2VtCFvB0AhXr5zSeWzPwaAPrjA4ebG+LUo24ziS8KqNxrFs1M\nmNrQUgZyQC6XIe1JHXc9t+JlL5UZyZQC1IfaJulDAgMBAAGjDTALMAkGA1UdEwQC\nMAAwDQYJKoZIhvcNAQEFBQADggEBAFCi7ZlkMnESvzlZCvv82Pq6S46AAOTPXdFd\nTMvrh12E1sdVALF1P1oYFJzG1EiZ5ezOx88fEDTW+Lxb9anw5/KJzwtWcfsupf1m\nV7J0D3qKzw5C1wjzYHh9/Pz7B1D0KthQRATQCfNf8s6bbFLaw/dmiIUhHLtIH5Qc\nyfrejTZbOSP77z8NOWir+BWWgIDDB2//3AkDIQvT20vmkZRhkqSdT7et4NmXOX/j\njhPti4b2Fie0LeuvgaOdKjCpQQNrYthZHXeVlOLRhMTSk3qUczenkKTOhvP7IS9q\n+Dzv5hqgSfvMG392KWh5f8xXfJNs4W5KLbZyl901MeReiLrPH3w=\n-----END CERTIFICATE-----"
      key: "-----BEGIN PRIVATE KEY-----\nMIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAMrvgu6ZTTefNN7j\njiZbS/xvQjyXjYMN7oVXv76jbX8gjMOmg9m0xoVZZFAE4XyQDuCm47VRx5Qrf/YL\nXmB2VtCFvB0AhXr5zSeWzPwaAPrjA4ebG+LUo24ziS8KqNxrFs1MmNrQUgZyQC6X\nIe1JHXc9t+JlL5UZyZQC1IfaJulDAgMBAAECgYEAnxOjEj/vrLNLMZE1Q9H7PZVF\nWdP/JQVNvQ7tCpZ3ZdjxHwkvf//aQnuxS5yX2Rnf37BS/TZu+TIkK4373CfHomSx\nUTAn2FsLmOJljupgGcoeLx5K5nu7B7rY5L1NHvdpxZ4YjeISrRtEPvRakllENU5y\ngJE8c2eQOx08ZSRE4TkCQQD7dws2/FldqwdjJucYijsJVuUdoTqxP8gWL6bB251q\nelP2/a6W2elqOcWId28560jG9ZS3cuKvnmu/4LG88vZFAkEAzphrH3673oTsHN+d\nuBd5uyrlnGjWjuiMKv2TPITZcWBjB8nJDSvLneHF59MYwejNNEof2tRjgFSdImFH\nmi995wJBAMtPjW6wiqRz0i41VuT9ZgwACJBzOdvzQJfHgSD9qgFb1CU/J/hpSRIM\nkYvrXK9MbvQFvG6x4VuyT1W8mpe1LK0CQAo8VPpffhFdRpF7psXLK/XQ/0VLkG3O\nKburipLyBg/u9ZkaL0Ley5zL5dFBjTV2Qkx367Ic2b0u9AYTCcgi2DsCQQD3zZ7B\nv7BOm7MkylKokY2MduFFXU0Bxg6pfZ7q3rvg8gqhUFbaMStPRYg6myiDiW/JfLhF\nTcFT4touIo7oriFJ\n-----END PRIVATE KEY-----"
      caCertificate: "-----BEGIN CERTIFICATE-----\nMIIEFzCCAv+gAwIBAgIJALK1iUpF2VQLMA0GCSqGSIb3DQEBBQUAMIGhMQswCQYD\nVQQGEwJVUzELMAkGA1UECAwCU0MxFTATBgNVBAcMDERlZmF1bHQgQ2l0eTEcMBoG\nA1UECgwTRGVmYXVsdCBDb21wYW55IEx0ZDEQMA4GA1UECwwHVGVzdCBDQTEaMBgG\nA1UEAwwRd3d3LmV4YW1wbGVjYS5jb20xIjAgBgkqhkiG9w0BCQEWE2V4YW1wbGVA\nZXhhbXBsZS5jb20wHhcNMTUwMTEyMTQxNTAxWhcNMjUwMTA5MTQxNTAxWjCBoTEL\nMAkGA1UEBhMCVVMxCzAJBgNVBAgMAlNDMRUwEwYDVQQHDAxEZWZhdWx0IENpdHkx\nHDAaBgNVBAoME0RlZmF1bHQgQ29tcGFueSBMdGQxEDAOBgNVBAsMB1Rlc3QgQ0Ex\nGjAYBgNVBAMMEXd3dy5leGFtcGxlY2EuY29tMSIwIAYJKoZIhvcNAQkBFhNleGFt\ncGxlQGV4YW1wbGUuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nw2rK1J2NMtQj0KDug7g7HRKl5jbf0QMkMKyTU1fBtZ0cCzvsF4CqV11LK4BSVWaK\nrzkaXe99IVJnH8KdOlDl5Dh/+cJ3xdkClSyeUT4zgb6CCBqg78ePp+nN11JKuJlV\nIG1qdJpB1J5O/kCLsGcTf7RS74MtqMFo96446Zvt7YaBhWPz6gDaO/TUzfrNcGLA\nEfHVXkvVWqb3gqXUztZyVex/gtP9FXQ7gxTvJml7UkmT0VAFjtZnCqmFxpLZFZ15\n+qP9O7Q2MpsGUO/4vDAuYrKBeg1ZdPSi8gwqUP2qWsGd9MIWRv3thI2903BczDc7\nr8WaIbm37vYZAS9G56E4+wIDAQABo1AwTjAdBgNVHQ4EFgQUugLrSJshOBk5TSsU\nANs4+SmJUGwwHwYDVR0jBBgwFoAUugLrSJshOBk5TSsUANs4+SmJUGwwDAYDVR0T\nBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAaMJ33zAMV4korHo5aPfayV3uHoYZ\n1ChzP3eSsF+FjoscpoNSKs91ZXZF6LquzoNezbfiihK4PYqgwVD2+O0/Ty7UjN4S\nqzFKVR4OS/6lCJ8YncxoFpTntbvjgojf1DEataKFUN196PAANc3yz8cWHF4uvjPv\nWkgFqbIjb+7D1YgglNyovXkRDlRZl0LD1OQ0ZWhd4Ge1qx8mmmanoBeYZ9+DgpFC\nj9tQAbS867yeOryNe7sEOIpXAAqK/DTu0hB6+ySsDfMo4piXCc2aA/eI2DCuw08e\nw17Dz9WnupZjVdwTKzDhFgJZMLDqn37HQnT6EemLFqbcR0VPEnfyhDtZIQ==\n-----END CERTIFICATE-----"
- kind: "DeploymentConfig"
  apiVersion: "v1"
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    creationTimestamp: null
  spec:
    strategy:
      type: "Recreate"
      resources: {}
    triggers:
    - type: "ConfigChange"
    replicas: 1
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: "${JENKINS_SERVICE_NAME}"
      spec:
        containers:
        - name: "jenkins"
          image: "${JENKINS_IMAGE}"
          env:
          - name: "JENKINS_PASSWORD"
            value: "${JENKINS_PASSWORD}"
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: "IfNotPresent"
          capabilities: {}
          securityContext:
          capabilities: {}
          privileged: false
        restartPolicy: "Always"
        dnsPolicy: "ClusterFirst"
      status: {}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: image-scanner
  spec:
    template:
      metadata:
        labels:
          name: image-scanner
      spec:
        containers:
        - name: image-scanner
          image: "${SCANNER_IMAGE}"
          env:
          - name: container
            value: docker
        securityContext:
          privileged: true
        volumeMounts:
        - name: proc
          mountPath: /hostproc/
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: run
          mountPath: run
        - name: devmapper
          mountPath: /var/lib/docker/devicemapper/metadata/
        - name: dev
          mountPath: /dev
      volumes:
      - name: proc
        hostPath:
          path: /proc/
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: run
        hostPath:
          path: /run
      - name: devmapper
        hostPath:
          path: /var/lib/docker/devicemapper/metadata/
      - name: dev
        hostPath:
          path: /dev
    replicas: 1
    selector:
      name: image-scanner
- kind: Service
  apiVersion: v1
  metadata:
    name: image-scanner
    creationTimestamp: null
  spec:
    ports:
    - name: image-scanner
      protocol: TCP
      port: 5000
      targetPort: 5000
    selector:
      name: image-scanner
    portalIP: ""
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}

parameters:
- name: NAME
  description: Image workflow name
- name: SOURCE_URI
  description: Git source URI of Dockerfile repository
- name: BASE_DOCKER_IMAGE
  description: Base docker image from the Dockerfile FROM line. This must be previously
    defined as an image stream.
- name: BASE_DOCKER_IMAGE_TAG
  description: Base docker image tag from the Dockerfile FROM line.
  value: latest
- name: BUILD_IMAGE_NAME
  description: The name of the image after it is built, not including :<tag>
- name: BUILD_IMAGE_TAG
  description: The tag of the image after it is built
  value: scratch
- name: TEST_CMD
  description: Command to pass into the test container when it is run. In the form
    of '/usr/bin/command arg1 arg2'
  value: ''
- name: JENKINS_IMAGE
  description: Jenkins master docker image
  value: openshift/jenkins-16-centos7
- name: JENKINS_PASSWORD
  description: Password for the Jenkins user
  generate: expression
  value: password
- name: JENKINS_SERVICE_NAME
  description: Jenkins service name
  value: jenkins
- name: SCANNER_IMAGE
  description: Image scanner docker image
  value: aweiteka/image-scanner
- name: GIT_SECRET
  description: Git repo callback token
  generate: expression
  from: "[a-zA-Z0-9]{12}"
- name: GENERIC_SECRET
  description: Generic callback token
  generate: expression
  from: "[a-zA-Z0-9]{12}"
labels:
  template: automated-build


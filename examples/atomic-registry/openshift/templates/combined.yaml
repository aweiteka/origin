apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: atomic-registry-combined
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: atomic-registry
    name: atomic-registry
  spec:
    replicas: 1
    selector:
      app: atomic-registry
      deploymentconfig: atomic-registry
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: atomic-registry
          deploymentconfig: atomic-registry
      spec:
        containers:
        - image: aweiteka/origin-nonroot
          imagePullPolicy: Always
          name: origin-master
          args:
            - start
            - master
            - --config=/var/lib/openshift/openshift.local.config/master/master-config.yaml
            - --loglevel=5
          env:
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ping
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - name: config
              mountPath: /var/lib/openshift/openshift.local.config/master/
            - name: etcd
              mountPath: /var/lib/openshift/openshift.local.etcd
        - image: openshift/origin-docker-registry:latest
          imagePullPolicy: Always
          env:
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_HTTP_NET
              value: tcp
            - name: REGISTRY_HTTP_SECRET
              value: ${REGISTRY_HTTP_SECRET}
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "8443"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: registry
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - name: registry-storage
            mountPath: /registry
          - name: registry-secret
            mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: registry-storage
          emptyDir: {}
        - name: etcd
          emptyDir: {}
        - name: config
          secret:
            secretName: origin-config
        - name: registry-secret
          secret:
            secretName: registry-secret
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: atomic-registry
    name: atomic-registry
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: atomic-registry
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
  - description: "Registry HTTP secret"
    name: REGISTRY_HTTP_SECRET
    from: "user[a-zA-Z0-9]{64}"
    generate: expression
